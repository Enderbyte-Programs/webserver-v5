{
    "api" : [
        {
            "action" : "get-all-drives",
            "accepts" : {},
            "sql" : ["select * from drives;"],
            "returns" : true,
            "sendbool" : false
        },
        {
            "action" : "get-active-drive",
            "accepts" : {},
            "sql" : ["select * from drives where IsActive is true;"],
            "returns" : true,
            "sendbool" : false
        },
        {
            "action" : "check-password",
            "accepts" : {
                "forwho":"str",
                "password":"str"
            },
            "sql" : ["select * from accounts where UserName = '$forwho' and Password = '$password'"],
            "returns" : true,
            "sendbool" : true
        },
        {
            "action" : "reset-password",
            "accepts" : {
                "forwho" : "str",
                "oldpassword" : "str",
                "newpassword" : "str"
            },
            "sql" : ["update accounts set Password = '$newpassword' where UserName = '$forwho' and Password = '$oldpassword'","select * from accounts where UserName = '$forwho' and Password = '$newpassword'"],
            "returns" : true,
            "sendbool" : true
        },
        {
            "action" : "update-ad",
            "accepts" : {
                "drivename" : "str",
                "newddate" : "str",
                "newadate" : "str"
            },
            "sql" : [
                "update drives set DueDate = STR_TO_DATE('$newddate','%Y-%m-%d'), ActionDate = STR_TO_DATE('$newadate','%Y-%m-%d') where Name = '$drivename'"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "drive-exists",
            "accepts" : {
                "drivename" : "str"
            },
            "sql" : [
                "select * from drives where Name = '$drivename'"
            ],
            "returns" : true,
            "sendbool" : true
        },
        {
            "action" : "new-drive",
            "accepts" : {
                "drivename" : "str",
                "ddate" : "str",
                "adate" : "str"
            },
            "sql" : [
                "update drives set IsActive = false where IsActive = true",
                "update routes set CompletedDate = NULL",
                "update volunteers set IsActive = false where IsActive = true",
                "insert into drives values ('$drivename',NOW(),STR_TO_DATE('$ddate','%Y-%m-%d'),STR_TO_DATE('$adate','%Y-%m-%d'),true)"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "close-drive",
            "accepts" : {
            },
            "sql" : [
                "update drives set IsActive = false where IsActive = true",
                "update volunteers set IsActive = false where IsActive = true",
                "update routes set CompletedDate = NULL"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "add-route",
            "accepts" : {
                "name" : "str",
                "points" : "str",
                "centerlat" : "str",
                "centerlong" : "str",
                "people" : "num"
            },
            "sql" : [
                "delete from routes where CenterLat = '$centerlat'",
                "insert into routes (RouteName,MapNodes,NeededPeople,CenterLat,CenterLong,IsCompleted) values ('$name','$points','$people','$centerlat','$centerlong',false)"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "get-all-routes",
            "accepts" : {
                
            },
            "sql" : [
                "select * from routes order by RouteName;"
            ],
            "returns" : true,
            "sendbool" : false
        },
        {
            "action" : "delete-route",
            "accepts" : {
                "name" : "str"
            },
            "sql" : [
                "delete from routes where Routename = '$name'"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "volunteer",
            "accepts" : {
                "name" : "str",
                "grade" : "str",
                "class" : "str",
                "forwhich" : "int"

            },
            "sql" : [

                "insert into volunteers values ('$name','$grade','$class',$forwhich,NOW(),true)"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "get-contributions",
            "accepts" : {
                "name" : "str"
            },
            "sql" : [
                "select VolunteeredForID from volunteers where VolunteerName = '$name'"
            ],
            "returns" : true,
            "sendbool" : false
        },
        {
            "action" : "unvolunteer",
            "accepts" : {
                "name" : "str",
                "forwhich" : "int"
            },
            "sql" : [
                "delete from volunteers where VolunteerName = '$name' and VolunteeredForID = $forwhich"
            ],
            "returns" : false,
            "sendbool" : false
        },
        {
            "action" : "get-volunteers",
            "accepts" : {
                "routeid" : "int"
            },
            "sql" : [
                "select * from volunteers where VolunteeredForID = $routeid"
            ],
            "returns" : true,
            "sendbool" : false
        },
        {
            "action" : "invert-route",
            "accepts" : {
                "routeid" : "int"
            },
            "sql" : [
                "update routes set IsCompleted = IF ( IsCompleted , FALSE, TRUE )  where RouteID = $routeid",
                "update routes set CompletedDate = IF ( IsCompleted, NOW(), NULL ) where RouteID = $routeid"
            ],
            "returns": false,
            "sendbool" : false
        }
    ]
}